from dash import Dash, html, dcc, Input, Output
from datetime import datetime
import pandas as pd
import dash_daq as daq

def create_layout(app: Dash) -> html.Div:
    return html.Div(className="app-container", children=[
        html.Div(className="sidebar", children=[
        html.H1(app.title),
        html.Hr(),

        html.Button('Refresh', id='Refresh', n_clicks=0,
                    style={
                        'background-color': 'green',
                        'color': 'white',
                        'border-radius': '5px',  # Adjust the border-radius for rounded edges
                        'padding': '8px 16px',  # Adjust padding for better appearance
                        }),

        html.Br(),
        html.Label("Start Date:", className='start_label'),
        html.Br(),
        dcc.Input(value="01/12/2023", type='text', className='start_date', id='start_date', pattern=r"^\d{1,2}[/-]\d{1,2}[/-]\d{4}$", debounce=True),
        html.Label('Intervals:', className='intervals_label' ),
        html.Br(),
        dcc.Input(value=600, min=20, max=900, type='number',className='intervals_value', id='intervals_value', debounce=True),
        html.Br(),
        html.Label("Interval (dt):",  className='interval_label'),
        dcc.Slider(value=1, min=1, max=7, step=6, className='interval_value', id='interval_value'),
        html.Label("Demand Coefficient (%):", className='demand_coef_label'),
        html.Br(),
        dcc.Slider(value=2, min=0, max=30, step=1, marks=None, tooltip={ 'always_visible': True }, className='demand_coef_slider', id='demand_coef_slider'),
        html.Label("Activity Coefficient (%):",  className='activity_coef_label'),
        dcc.Slider(value=2, min=0, max=30, step=1, marks=None, tooltip={ 'always_visible': True }, className='activity_coef_slider', id='activity_coef_slider'),
        html.Label("Initial Demand:",  className='initial_demand_label'),
        html.Br(),
        dcc.Input(value=130, type='number', min=0, max=500, className='initial_demand_value', id='initial_demand_value', debounce=True),
        html.Br(),
        html.Label("Initial Activity:", className='initial_activity_label'),
        html.Br(),
        dcc.Input(value=130, type='number', min=0, max=500, className='initial_activity_value', id='initial_activity_value', debounce=True),
        html.Br(),
        html.Label("WIP Start:", className='wip_start_label'),
        html.Br(),
        dcc.Input(value=100, type='number', min=0, max=500, className='wip_start_value',id='wip_start_value', debounce=True),
        html.Br(),
        html.Label("Demand Growth on Year (%):", className='demand_growth_label'),
        dcc.Slider(value=2, min=0, max=30, step=1, marks=None, tooltip={ 'always_visible': True }, className='demand_growth_slider', id='demand_growth_slider'),
        html.Label("Activity Growth on Year (%):", className='activity_growth_label'),
        html.Br(),
        dcc.Slider(value=2, min=0, max=30, step=1, marks=None, tooltip={ 'always_visible': True }, className='activity_growth_slider',id='activity_growth_slider'),
        dcc.Checklist(
            options=[{'label': 'Weekend Demand', 'value': 'Weekend Demand'}],
            value=['Weekend Demand'],
            className='custom-checklist',
            id='weekend_demand_label'),
        html.Br(),
        dcc.Checklist(options=['Saturday Activity'],value=['Saturday Activity'], className='custom-checklist', id='sat_activity_label'),
        html.Br(),
        dcc.Checklist(options=['Sunday Activity'],value=['Sunday Activity'], className='custom-checklist', id='sund_activity_label'),


        html.Hr(),
        dcc.Checklist(options=['Check to Update: '], className='custom-checklist', id='check_update_1'),
        html.Br(),
        html.Label("Date: ", className='update_date_label_1'),
        html.Br(),
        dcc.Input(value="01/03/2024", type='text', className='update_date_value_1', id='update_date_value_1', pattern=r"^\d{1,2}[/-]\d{1,2}[/-]\d{4}$", debounce=True),
        html.Br(),
        html.Label("Update Demand: ", className='update_demand_label_1'),
        html.Br(),
        dcc.Input(value=130, type='number', min=0, max=500, className='update_demand_value_1', id='update_demand_value_1', debounce=True),
        html.Br(),
        html.Label("Update Activity: ", className='update_activity_label_1'), 
        html.Br(),
        dcc.Input(value=130, type='number', min=0, max=500, className='update_activity_value_1', id='update_activity_value_1', debounce=True),

        html.Hr(),
        dcc.Checklist(options=['Check to Update: '], className='custom-checklist', id='check_update_2'),
        html.Br(),
        html.Label("Date: ", className='update_date_label_2'),
        html.Br(),
        dcc.Input(value="01/05/2024", type='text', className='update_date_value_2', id='update_date_value_2', pattern=r"^\d{1,2}[/-]\d{1,2}[/-]\d{4}$", debounce=True),
        html.Br(),
        html.Label("Update Demand: ", className='update_demand_label_2'),
        html.Br(),
        dcc.Input(value=130, type='number', min=0, max=500, className='update_demand_value_2', id='update_demand_value_2', debounce=True),
        html.Br(),
        html.Label("Update Activity: ", className='update_activity_label_2'), 
        html.Br(),
        dcc.Input(value=130, type='number', min=0, max=500, className='update_activity_value_2', id='update_activity_value_2', debounce=True),

        html.Hr(),
        dcc.Checklist(options=['Check to Update: '], className='custom-checklist', id='check_update_3'),
        html.Br(),
        html.Label("Date: ", className='update_date_label_3'),
        html.Br(),
        dcc.Input(value="01/07/2024", type='text', className='update_date_value_3', id='update_date_value_3',pattern=r"^\d{1,2}[/-]\d{1,2}[/-]\d{4}$", debounce=True),
        html.Br(),
        html.Label("Update Demand: ", className='update_demand_label_3'),
        html.Br(),
        dcc.Input(value=130, type='number', min=0, max=500, className='update_demand_value_3', id='update_demand_value_3', debounce=True),
        html.Br(),
        html.Label("Update Activity: ", className='update_activity_label_3'), 
        html.Br(),
        dcc.Input(value=130, type='number', min=0, max=500, className='update_activity_value_3', id='update_activity_value_3', debounce=True),


        html.Hr(),
        dcc.Checklist(options=['Check to Update: '], className='custom-checklist', id='check_update_4'),
        html.Br(),
        html.Label("Date: ", className='update_date_label_4'),
        html.Br(),
        dcc.Input(value="01/09/2024", type='text', className='update_date_value_4', id='update_date_value_4', pattern=r"^\d{1,2}[/-]\d{1,2}[/-]\d{4}$", debounce=True),
        html.Br(),
        html.Label("Update Demand: ", className='update_demand_label_4'),
        html.Br(),
        dcc.Input(value=130, type='number', min=0, max=500, className='update_demand_value_4', id='update_demand_value_4', debounce=True),
        html.Br(),
        html.Label("Update Activity: ", className='update_activity_label_4'), 
        html.Br(),
        dcc.Input(value=130, type='number', min=0, max=500, className='update_activity_value_4', id='update_activity_value_4', debounce=True),

        html.Hr(),
        dcc.Checklist(options=['Check to Update: '], className='custom-checklist', id='check_update_5'),
        html.Br(),
        html.Label("Date: ", className='update_date_label_5'),
        html.Br(),
        dcc.Input(value="01/11/2024", type='text', className='update_date_value_5', id='update_date_value_5', pattern=r"^\d{1,2}[/-]\d{1,2}[/-]\d{4}$", debounce=True),
        html.Br(),
        html.Label("Update Demand: ", className='update_demand_label_5'),
        html.Br(),
        dcc.Input(value=130, type='number', min=0, max=500, className='update_demand_value_5', id='update_demand_value_5', debounce=True),
        html.Br(),
        html.Label("Update Activity: ", className='update_activity_label_5'), 
        html.Br(),
        dcc.Input(value=130, type='number', min=0, max=500, className='update_activity_value_5', id='update_activity_value_5', debounce=True)
        ]),
        html.Div(className="main_content", children=[
            html.Div(className='labels-inline', children=[
                html.Label('Demand', className='title_name', style={'color': 'blue', 'font-weight': 'bold', 'font-size': '30px'}),
                html.Label(',', className='title_name', style={'color': 'black', 'font-weight': 'bold', 'font-size': '30px'}),
                html.Label('Activity', className='title_name', style={'color': 'red', 'font-weight': 'bold', 'font-size': '30px'}),
                html.Label('and', className='title_name', style={'color': 'black', 'font-weight': 'bold', 'font-size': '30px'}),
                html.Label('WIP', className='title_name', style={'color': 'green', 'font-weight': 'bold', 'font-size': '30px'}),
                html.Label('Over Time', className='title_name', style={'color': 'black', 'font-weight': 'bold', 'font-size': '30px'})
        ]),
            dcc.Graph(id='graph1', style={'width': '90%', 'height':'60%'}),
            dcc.Graph(id='graph2', style={'width': '60%', 'height':'30%'}),
            html.Img(src='/assets/footer.png', className='footer-image')

    ]),

    ])
